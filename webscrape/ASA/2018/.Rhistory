main = '',
col = Steel,
width = 1,
space = 0.2,
yaxs = 'i'))
# Adjust ticks bottom and left axes
axis(side = 1, at = seq(0.7, 0.7 + (length(bp) - 1)*1.2, 1.2), # dynamically adjust x-axis tick locations (repeated throughout function)
labels = F, tick = T, lwd = 0, lwd.ticks = 1, tcl = -0.15,
mgp = c(3, 1, 0.5), col = Charcoal)
axis(side = 2, las = 1, tick = T, lwd = 0, lwd.ticks = 1, tcl = 0.15, col = Charcoal)
# Foreground line graph
par(new = T)
with(summ,
plot(seq(0.5, 0.5 + (length(bp) - 1)*1.2, 1.2),
`Lapse rate`,
axes = F,
type = "l",
xlab=NA, ylab=NA,
yaxs = 'i',
lwd = 3,
col = Bright.Blue,
xlim = c(0, (length(bp) - 1)*1.2 + 1),
ylim = c(0, y.lim.max)))
with(summ,
points(seq(0.5, 0.5 + (length(bp) - 1)*1.2, 1.2),
`Lapse rate`,
pch = 16, cex = 0.75,
col = Bright.Blue))
# Edit right y-axis
axis(side = 4, las = 1, tick = T, lwd = 0, lwd.ticks = 1, tcl = 0.15, col = Charcoal,
labels = paste0(100*seq(0, y.lim.max, y.lim.max/4), "%"),
at = seq(0, y.lim.max, y.lim.max/4))
mtext(side = 4, line = 3.25, "Quarterly lapse rate",
col = Charcoal, cex = plot.text.size/12)
# Edit bottom x-axis
mtext(side = 2, line = 3.25, "Number of observations",
col = Charcoal, cex = plot.text.size/12)
mtext(text = "Valuation quarter", side = 1, line = 2.5, col = Charcoal, cex = plot.text.size/12)
summ <- dat %>%
filter(Company == "AIGI", ValDate < "2008-01-01") %>%
group_by(ValDate) %>%
summarize(Inforce = n(),
Lapses = sum(Surr == 1),
`Lapse rate` = Lapses/Inforce,
Deferring = sum(FirstWDValdateWB >= ValDate),
`WD commencements` = sum(FirstWDValdateWB == ValDate),
`WD commencement rate` = `WD commencements`/Deferring)
kable(summ %>%
select(Inforce, Lapses, `Lapse rate`),
digits = 3)
par(mar = c(4,5,2,5),
ps = 12, cex.axis = 1,
col.axis = Charcoal, col.lab = Charcoal)
y.lim.max = 0.10
plot.text.size = 12
bp <- with(summ,
barplot(Inforce,
names.arg = NULL,
ylab = "",
yaxt = 'n',
xlab = "",
las = 1,
border = NA,
main = '',
col = Steel,
width = 1,
space = 0.2,
yaxs = 'i'))
# Adjust ticks bottom and left axes
axis(side = 1, at = seq(0.7, 0.7 + (length(bp) - 1)*1.2, 1.2), # dynamically adjust x-axis tick locations (repeated throughout function)
labels = F, tick = T, lwd = 0, lwd.ticks = 1, tcl = -0.15,
mgp = c(3, 1, 0.5), col = Charcoal)
axis(side = 2, las = 1, tick = T, lwd = 0, lwd.ticks = 1, tcl = 0.15, col = Charcoal)
# Foreground line graph
par(new = T)
with(summ,
plot(seq(0.5, 0.5 + (length(bp) - 1)*1.2, 1.2),
`Lapse rate`,
axes = F,
type = "l",
xlab=NA, ylab=NA,
yaxs = 'i',
lwd = 3,
col = Bright.Blue,
xlim = c(0, (length(bp) - 1)*1.2 + 1),
ylim = c(0, y.lim.max)))
with(summ,
points(seq(0.5, 0.5 + (length(bp) - 1)*1.2, 1.2),
`Lapse rate`,
pch = 16, cex = 0.75,
col = Bright.Blue))
# Edit right y-axis
axis(side = 4, las = 1, tick = T, lwd = 0, lwd.ticks = 1, tcl = 0.15, col = Charcoal,
labels = paste0(100*seq(0, y.lim.max, y.lim.max/4), "%"),
at = seq(0, y.lim.max, y.lim.max/4))
mtext(side = 4, line = 3.25, "Quarterly lapse rate",
col = Charcoal, cex = plot.text.size/12)
# Edit bottom x-axis
mtext(side = 2, line = 3.25, "Number of observations",
col = Charcoal, cex = plot.text.size/12)
mtext(text = "Valuation quarter", side = 1, line = 2.5, col = Charcoal, cex = plot.text.size/12)
summ <- dat %>%
filter(Company == "AIGI") %>%
group_by(ValDate) %>%
summarize(Inforce = n(),
Lapses = sum(Surr == 1),
`Lapse rate` = Lapses/Inforce,
Deferring = sum(FirstWDValdateWB >= ValDate),
`WD commencements` = sum(FirstWDValdateWB == ValDate),
`WD commencement rate` = `WD commencements`/Deferring)
kable(summ %>%
select(Inforce, Lapses, `Lapse rate`),
digits = 3)
par(mar = c(4,5,2,5),
ps = 12, cex.axis = 1,
col.axis = Charcoal, col.lab = Charcoal)
y.lim.max = 0.10
plot.text.size = 12
bp <- with(summ,
barplot(Inforce,
names.arg = sort(unique(ValDate)),
ylab = "",
yaxt = 'n',
xlab = "",
las = 1,
border = NA,
main = '',
col = Steel,
width = 1,
space = 0.2,
yaxs = 'i'))
# Adjust ticks bottom and left axes
axis(side = 1, at = seq(0.7, 0.7 + (length(bp) - 1)*1.2, 1.2), # dynamically adjust x-axis tick locations (repeated throughout function)
labels = F, tick = T, lwd = 0, lwd.ticks = 1, tcl = -0.15,
mgp = c(3, 1, 0.5), col = Charcoal)
axis(side = 2, las = 1, tick = T, lwd = 0, lwd.ticks = 1, tcl = 0.15, col = Charcoal)
# Foreground line graph
par(new = T)
with(summ,
plot(seq(0.5, 0.5 + (length(bp) - 1)*1.2, 1.2),
`Lapse rate`,
axes = F,
type = "l",
xlab=NA, ylab=NA,
yaxs = 'i',
lwd = 3,
col = Bright.Blue,
xlim = c(0, (length(bp) - 1)*1.2 + 1),
ylim = c(0, y.lim.max)))
with(summ,
points(seq(0.5, 0.5 + (length(bp) - 1)*1.2, 1.2),
`Lapse rate`,
pch = 16, cex = 0.75,
col = Bright.Blue))
# Edit right y-axis
axis(side = 4, las = 1, tick = T, lwd = 0, lwd.ticks = 1, tcl = 0.15, col = Charcoal,
labels = paste0(100*seq(0, y.lim.max, y.lim.max/4), "%"),
at = seq(0, y.lim.max, y.lim.max/4))
mtext(side = 4, line = 3.25, "Quarterly lapse rate",
col = Charcoal, cex = plot.text.size/12)
# Edit bottom x-axis
mtext(side = 2, line = 3.25, "Number of observations",
col = Charcoal, cex = plot.text.size/12)
mtext(text = "Valuation quarter", side = 1, line = 2.5, col = Charcoal, cex = plot.text.size/12)
bp <- with(summ,
barplot(Inforce,
names.arg = format(sort(unique(ValDate)), "%Y"),
ylab = "",
yaxt = 'n',
xlab = "",
las = 1,
border = NA,
main = '',
col = Steel,
width = 1,
space = 0.2,
yaxs = 'i'))
summary(dat$Left_Truncated)
summary(dat$Left_Truncated_WB)
summary(dat$First_Observation)
summary(dat$Drop_Survival)
summary(dat$Drop_Utilization)
summary(dat$RiderID)
table(dat$RiderID)
sum(is.na(dat$RiderID))
unique(dat$PolNumber[is.na(dat$RiderID)])
length(unique(dat$PolNumber[is.na(dat$RiderID)])
)
max(dat$ValDate) - min(dat$ValDate)
(max(dat$ValDate) - min(dat$ValDate))/9``
(max(dat$ValDate) - min(dat$ValDate))/91
?difftime
?diff.zoo
365.25/4
(max(dat$ValDate) - min(dat$ValDate))/91.3125
x <- dat$ValDate
round((max(x) - min(x))/91.3125)
round(as.numeric(max(x) - min(x))/91.3125)
round(as.numeric(max(x) - min(x))/91.3125) == length(unique(x)) + 1
length(unique(x))
round(as.numeric(max(x) - min(x))/91.3125) == length(unique(x)) - 1
gap.finder <- function(x){
round(as.numeric(max(x) - min(x))/91.3125) == length(unique(x)) - 1
}
system.time({
Continuous <- tapply(dat$ValDate, dat$PolNumber, gap.finder)
})
system.time(
dat %>%
group_by(PolNumber) %>%
summarize(Continuous = gap.finder(ValDate))
)
gap.finder <- function(x){
round(as.numeric(max(x) - min(x))/91.3125) == length(unique(x)) - 1
}
system.time({
Continuous1 <- tapply(dat$ValDate, dat$PolNumber, gap.finder)
})
system.time(
Continous2 <- dat %>%
group_by(PolNumber) %>%
summarize(Continuous = gap.finder(ValDate))
)
summary(Continuous1)
summary(Continous2)
head(Continuous1)
Continuous <- tapply(dat$ValDate, dat$PolNumber, gap.finder)
sum(1 - Continuous)
ifelse(sum(1 - Continuous) > 0, "These policies will be dropped from the dataset.", "")
ifelse(length(unique(dat$PolNumber[is.na(dat$RiderID)]), "These policies will be dropped from the dataset.", "")
ifelse(length(unique(dat$PolNumber[is.na(dat$RiderID)])), "These policies will be dropped from the dataset.", "")
sort(names(dat))
summary(dat$WDToDate_Tot - dat$WDToDate)
sum(dat$FirstWDValdateWB == dat$ValDate & dat$WDAmount > 0)
sum(dat$FirstWDValdateWB == dat$ValDate & dat$WDAmount == 0)
sum(dat$FirstWDValdateWB == dat$ValDate & dat$WDToDate > 0)
sum(dat$FirstWDValdateWB == dat$ValDate & dat$WDToDate == 0)
dat %>% filter(PolNumber == pols[1]) %>% select(ValDate, FirstWDDateWB, FirstWDValdateWB,WDStatus, WDAmount)
pols2 <- unique(dat$PolNumber[dat$FirstWDValdateWB == dat$ValDate & dat$WDToDate == 0])
dat %>% filter(PolNumber == pols2[1]) %>% select(ValDate, FirstWDDateWB, FirstWDValdateWB,WDStatus, WDAmount)
dat %>% filter(PolNumber == pols2[2]) %>% select(ValDate, FirstWDDateWB, FirstWDValdateWB,WDStatus, WDAmount)
as.Date(as.yearqtr(as.Date("2017-10-01") - 0.25), frac = 1)
as.Date(as.yearqtr(as.Date("2017-10-02") - 0.25), frac = 1)
as.Date(as.yearqtr(as.Date("2017-10-01")) - 0.25, frac = 1)
as.Date(as.yearqtr(as.Date("2017-10-01")), frac = 1)
?seq.Date
library(dplyr)
library(zoo)
library(knitr)
source("V:/Reference/R/MillimanColorPalette.R")
dat <- readRDS("V:/ESB/0931RDO10-81-54/Analysis/R/LapseUtilizationRelationship/Quarterly_Data_v5_subset.rds")
dat <- dat %>%
filter(Company == "AIGI") %>%
mutate(FirstWDValdateWB = as.Date(as.yearqtr(FirstWDDateWB - 0.25), frac = 1)) # Fix this!
source('C:/Users/Matthias.Kullowatz/Google Drive/Milliman/TimeSheets/ProjectedBillableHours.R', echo=TRUE)
# Bonus pace
(Billable *
(1 + ((52.15 - length(files))*5 - (16 - PTO/7.5) - (10 - Holiday/7.5)) /
(length(files)*5 - PTO/7.5 - Holiday/7.5)) - 1300) *
1.1 * 100.5
plot(weekly, xlab = 'Week', ylab = 'Hours', type = 'l', lwd = 2, ylim = c(0, 40))
abline(h = mean(weekly), col = 'red')
sort(names(dat))
library(dplyr)
library(zoo)
library(knitr)
source("V:/Reference/R/MillimanColorPalette.R")
dat <- readRDS("V:/ESB/ReconUE/Work/Analysis/R/Adhoc_Rscripts/ALNZSampleData.rds")
summary(dat$FirstWDDateWB)
as.yearqtr(as.Date("2017-10-01"))
as.Date(as.yearqtr(as.Date("2017-10-01")))
as.Date(as.yearqtr(as.Date("2017-10-02")))
as.Date(as.yearqtr(as.Date("2017-10-01")), frac = 1)
dat <- dat %>%
mutate(FirstWDValdateWB = as.Date(as.yearqtr(FirstWDDateWB), frac = 1)) # Fix this!
unique(dat$FirstWDValdateWB)
head(dat %>% filter(FirstWDValdateWB == ValDate) %>% select(ValDate, FirstWDDateWB, FirstWDValdateWB))
summ <- dat %>%
group_by(ValDate) %>%
summarize(Inforce = n(),
Lapses = sum(Surr == 1),
`Lapse rate` = Lapses/Inforce,
Deferring = sum(FirstWDValdateWB >= ValDate),
`WD commencements` = sum(FirstWDValdateWB == ValDate),
`WD commencement rate` = `WD commencements`/Deferring)
kable(summ %>%
select(Inforce, Lapses, `Lapse rate`),
digits = 3)
par(mar = c(4,5,2,5),
ps = 12, cex.axis = 1,
col.axis = Charcoal, col.lab = Charcoal)
y.lim.max = 0.10
plot.text.size = 12
bp <- with(summ,
barplot(Inforce,
names.arg = format(sort(unique(ValDate)), "%Y"),
ylab = "",
yaxt = 'n',
xlab = "",
las = 1,
border = NA,
main = '',
col = Steel,
width = 1,
space = 0.2,
yaxs = 'i'))
# Adjust ticks bottom and left axes
axis(side = 1, at = seq(0.7, 0.7 + (length(bp) - 1)*1.2, 1.2), # dynamically adjust x-axis tick locations (repeated throughout function)
labels = F, tick = T, lwd = 0, lwd.ticks = 1, tcl = -0.15,
mgp = c(3, 1, 0.5), col = Charcoal)
axis(side = 2, las = 1, tick = T, lwd = 0, lwd.ticks = 1, tcl = 0.15, col = Charcoal)
# Foreground line graph
par(new = T)
with(summ,
plot(seq(0.5, 0.5 + (length(bp) - 1)*1.2, 1.2),
`Lapse rate`,
axes = F,
type = "l",
xlab=NA, ylab=NA,
yaxs = 'i',
lwd = 3,
col = Bright.Blue,
xlim = c(0, (length(bp) - 1)*1.2 + 1),
ylim = c(0, y.lim.max)))
with(summ,
points(seq(0.5, 0.5 + (length(bp) - 1)*1.2, 1.2),
`Lapse rate`,
pch = 16, cex = 0.75,
col = Bright.Blue))
# Edit right y-axis
axis(side = 4, las = 1, tick = T, lwd = 0, lwd.ticks = 1, tcl = 0.15, col = Charcoal,
labels = paste0(100*seq(0, y.lim.max, y.lim.max/4), "%"),
at = seq(0, y.lim.max, y.lim.max/4))
mtext(side = 4, line = 3.25, "Quarterly lapse rate",
col = Charcoal, cex = plot.text.size/12)
# Edit bottom x-axis
mtext(side = 2, line = 3.25, "Number of observations",
col = Charcoal, cex = plot.text.size/12)
mtext(text = "Valuation quarter", side = 1, line = 2.5, col = Charcoal, cex = plot.text.size/12)
sum(dat$Surr)
97/150000
aggdat <- readRDS("V:/DWW/0334ZVS02/Data/Industry/CleanData/PW_Study_Aggregated_Data_v5_filtered_tidy_TEST.rds")
dmm_old <- readRDS("V:/MAMK/work/dmmold_20180223.rds")
dmm_new <- readRDS("V:/MAMK/work/dmmnew_20180223.rds")
length(unique(dmm_old$contract_number))
length(intersect(dmm_old$contract_number, dmm_new$contract_number))
length(intersect(dmm_old$contract_number, dmm_new$contract_number)) == length(unique(dmm_new$contract_number))
# The new "DMM" has a subset of contract numbers from the old
length(setdiff(dmm_new$contract_number, dmm_old$contract_number))
setdiff(names(dmm_new), names(dmm_old))
setdiff(names(dmm_old), names(dmm_new))
# Mismatched columns
sort(setdiff(names(dmm_new), names(dmm_old)))
sort(setdiff(names(dmm_old), names(dmm_new)))
head(dmm_old$Benefit_Ind)
head(dmm_new$benefit_desc)
head(dmm_new$Benefit_Id)
# Mismatched columns
sort(setdiff(names(dmm_new), names(dmm_old)))
sort(setdiff(names(dmm_old), names(dmm_new)))
summary(dmm_new$gmiwb_annual_with)
summary(dmm_old$GuarAmt)
summary(dmm_old$NearestGuarAmt)
summary(dmm_old$GuarAmt[dmm_old$Benefit_Ind == "GMWB"])
summary(dmm_old$NearestGuarAmt[dmm_old$Benefit_Ind == "GMWB"])
summary(dmm_old$PVBenefit_GMWB[dmm_old$Benefit_Ind == "GMWB"])
summary(dmm_old$WP[dmm_old$Benefit_Ind == "GMWB"])
summary(dmm_old$Current_Payment[dmm_old$Benefit_Ind == "GMWB"])
summary(dmm_old$AvgMthlyFV[dmm_old$Benefit_Ind == "GMWB"])
sort(setdiff(names(dmm_new), names(dmm_old)))
sort(setdiff(names(dmm_old), names(dmm_new)))
dmm_old_test <- dmm_old %>%
mutate(Benefit_Id = benefit_id,
gmwb_base = PVBenefit_GMWB,
surrender_schedule = Surr_schedule,
Issue_state = issue_state) %>%
select(-c(benefit_id, PVBenefit_GMWB, Surr_schedule, issue_state))
library(dplyr)
dmm_old_test <- dmm_old %>%
mutate(Benefit_Id = benefit_id,
gmwb_base = PVBenefit_GMWB,
surrender_schedule = Surr_schedule,
Issue_state = issue_state) %>%
select(-c(benefit_id, PVBenefit_GMWB, Surr_schedule, issue_state))
dmm_new_test <- dmm_new %>%
left_join(dmm_old_test,
by = c("contract_number", "valuation_Date"))
class(dmm_old$valuation_Date)
class(dmm_new$valuation_Date)
dmm_new_test <- dmm_new %>%
mutate(valuation_Date = as.Date(valuation_Date)) %>%
left_join(dmm_old_test,
by = c("contract_number"))
dmm_new_test <- dmm_new %>%
mutate(valuation_Date = as.Date(valuation_Date)) %>%
left_join(dmm_old_test,
by = c("contract_number"),
suffix = c("_new", "_old"))
mean(dmm_new_test$Issue_state_new == dmm_new_test$Issue_state_old)
test.cols <- gsub("_new", "", grep("_new", names(dmm_new_test), value = T))
test.cols <- gsub("_new", "", grep("_new", names(dmm_new_test), value = T))
for(var in test.cols){
print(paste0(var, " --- ", format(mean(dmm_new_test[[paste0(i, "_new")]] == dmm_new_test[[paste0(i, "_old")]]), digits = 3)))
}
test.cols <- gsub("_new", "", grep("_new", names(dmm_new_test), value = T))
for(var in test.cols){
print(paste0(var, " --- ", format(mean(dmm_new_test[[paste0(var, "_new")]] == dmm_new_test[[paste0(var, "_old")]]), digits = 3)))
}
for(var in test.cols){
print(paste0(var, " --- ", format(mean(dmm_new_test[[paste0(var, "_new")]] == dmm_new_test[[paste0(var, "_old")]], na.rm = T), digits = 3)))
}
saveRDS(dmm_old %>% filter(as.Date(valuation_Date) == "2012-06-30"),
file = "V:/ESB/ReconUE/Work/Analysis/R/Adhoc_Rscripts/PRUD/2017Q4/dmmold_20120630.rds")
saveRDS(dmm_new %>% filter(as.Date(valuation_Date) == "2012-06-30"),
file = "V:/ESB/ReconUE/Work/Analysis/R/Adhoc_Rscripts/PRUD/2017Q4/dmmnew_20120630.rds")
library(dplyr)
library(xtable)
year = 2018
setwd(paste0("~/../Dropbox/ASA Blog Data/", year, " Stats/"))
getwd()
source('C:/Users/Matthias.Kullowatz/Dropbox/ASA Blog Data/2018 Stats/asa charts_MK_KM.R', echo=TRUE)
names(homeStats)
head(stats)
statsWithTeams <- statsWithTeams %>%
mutate(xGD = hxg - axg) %>%
rename(Date = date, Home = hteam, HG = hg)
statsWithTeams <- unique(merge(stats, shooting, by.x = 'gameID', by.y = 'gameID')[, c('date', 'hteam', 'hg', 'hxg', 'ateam', 'ag', 'axg')])
statsWithTeams <- statsWithTeams %>%
mutate(xGD = hxg - axg) %>%
rename(Date = date, Home = hteam, HG = hg)
statsWithTeams
stats <- merge(homeStats, awayStats, by.x = 'gameID', by.y = 'gameID')
statsWithTeams <- unique(merge(stats, shooting, by.x = 'gameID', by.y = 'gameID')[, c('date', 'hteam', 'hg', 'hxg', 'ateam', 'ag', 'axg')])
statsWithTeams <- statsWithTeams %>%
mutate(xGD = hxg - axg) %>%
rename(Date = date, Home = hteam, HG = hg, HxG = hxg, Away = ateam, AG = ag, AxG = axg)
statsWithTeams
write.csv(statsWithTeams, 'by_game_xg.csv')
#write HTML table out
write.table(print.xtable(xtable(statsWithTeams,
digits = c(0, 0, 0, 0, 2, 0, 0, 2, 2),
align = rep("c", 9)),
type = "html",
include.rownames = F),
"by_game_xg_HTML.txt",
quote = F)
summary(shooting$xGvalueP)
homeStats <- group_by(shooting, gameID) %>%
summarise(HG = sum(ifelse(team == hteam, result == 'Goal', 0)),
HxGT = sum(ifelse(team == hteam, xGTeam, 0)),
HxGP = sum(ifelse(team == hteam, xGvalueP)))
awayStats <- group_by(shooting, gameID) %>%
summarise(AG = sum(ifelse(team == ateam, result == 'Goal', 0)),
AxGT = sum(ifelse(team == ateam, xGTeam, 0)),
AxGP = sum(ifelse(team == ateam, xGvalueP, 0)))
homeStats <- group_by(shooting, gameID) %>%
summarise(HG = sum(ifelse(team == hteam, result == 'Goal', 0)),
HxGT = sum(ifelse(team == hteam, xGTeam, 0)),
HxGP = sum(ifelse(team == hteam, xGvalueP, 0)))
awayStats <- group_by(shooting, gameID) %>%
summarise(AG = sum(ifelse(team == ateam, result == 'Goal', 0)),
AxGT = sum(ifelse(team == ateam, xGTeam, 0)),
AxGP = sum(ifelse(team == ateam, xGvalueP, 0)))
stats <- merge(homeStats, awayStats, by.x = 'gameID', by.y = 'gameID')
statsWithTeams <- unique(merge(stats, shooting, by.x = 'gameID', by.y = 'gameID')
)
head(statsWithTeams)
homeStats <- group_by(shooting, gameID) %>%
summarise(HG = sum(ifelse(team == hteam, result == 'Goal', 0)),
HxGt = sum(ifelse(team == hteam, xGTeam, 0)),
HxGp = sum(ifelse(team == hteam, xGvalueP, 0)))
awayStats <- group_by(shooting, gameID) %>%
summarise(AG = sum(ifelse(team == ateam, result == 'Goal', 0)),
AxGt = sum(ifelse(team == ateam, xGTeam, 0)),
AxGp = sum(ifelse(team == ateam, xGvalueP, 0)))
stats <- merge(homeStats, awayStats, by.x = 'gameID', by.y = 'gameID')
statsWithTeams <- unique(merge(stats, shooting, by.x = 'gameID', by.y = 'gameID')[, c('date', 'hteam', 'HG', 'HxGt', "HxGp", 'ateam', 'AG', 'AxGt', 'AxGp')])
statsWithTeams <- statsWithTeams %>%
mutate(xGDt = HxGt - AxGt,
xGDp = HxGp - AxGp) %>%
rename(Date = date, Home = hteam, Away = ateam, AG = ag)
homeStats <- group_by(shooting, gameID) %>%
summarise(HG = sum(ifelse(team == hteam, result == 'Goal', 0)),
HxGt = sum(ifelse(team == hteam, xGTeam, 0)),
HxGp = sum(ifelse(team == hteam, xGvalueP, 0)))
awayStats <- group_by(shooting, gameID) %>%
summarise(AG = sum(ifelse(team == ateam, result == 'Goal', 0)),
AxGt = sum(ifelse(team == ateam, xGTeam, 0)),
AxGp = sum(ifelse(team == ateam, xGvalueP, 0)))
stats <- merge(homeStats, awayStats, by.x = 'gameID', by.y = 'gameID')
statsWithTeams <- unique(merge(stats, shooting, by.x = 'gameID', by.y = 'gameID')[, c('date', 'hteam', 'HG', 'HxGt', "HxGp", 'ateam', 'AG', 'AxGt', 'AxGp')])
statsWithTeams <- statsWithTeams %>%
mutate(xGDt = HxGt - AxGt,
xGDp = HxGp - AxGp) %>%
rename(Date = date, Home = hteam, Away = ateam)
head(statsWithTeams)
write.csv(statsWithTeams, 'by_game_xg.csv')
#write HTML table out
write.table(print.xtable(xtable(statsWithTeams,
digits = c(0, 0, 0, 0, 2, 2, 0, 0, 2, 2, 2, 2),
align = rep("c", 9)),
type = "html",
include.rownames = F),
"by_game_xg_HTML.txt",
quote = F)
write.table(print.xtable(xtable(statsWithTeams,
digits = c(0, 0, 0, 0, 2, 2, 0, 0, 2, 2, 2, 2),
align = rep("c", 12)),
type = "html",
include.rownames = F),
"by_game_xg_HTML.txt",
quote = F)
